var assert = require('chai').assert
var colorPatternTimes = require('../challenges/switching-between-pencils')

describe('Switching Between Pencils', function() {

  it('given array of colors, returns time to color pattern in seconds', function() {
    assert.equal(colorPatternTimes(["Red", "Green", "Blue", "Yellow", "Red", "Red", "Yellow", "Green", "Green", "Green", "Red", "Blue", "Yellow", "Blue", "Green", "Green", "Red", "Red", "Red", "Blue", "Green", "Red", "Blue", "Blue", "Red", "Blue"]), 70)
    assert.equal(colorPatternTimes(["Red", "Blue", "Yellow", "Blue", "Green", "Green", "Yellow", "Green", "Blue", "Blue", "Blue", "Red", "Blue", "Red", "Green", "Red"]), 44)
    assert.equal(colorPatternTimes(["Yellow", "Green", "Blue"]), 8)
    assert.equal(colorPatternTimes(["Green", "Green", "Red", "Green", "Yellow", "Red", "Red", "Green", "Red", "Green"]), 27)
    assert.equal(colorPatternTimes(["Red"]), 2)
    assert.equal(colorPatternTimes(["Red", "Red", "Blue", "Red", "Green", "Red", "Blue", "Green", "Green", "Yellow", "Red"]), 30)
    assert.equal(colorPatternTimes(["Green", "Green", "Blue", "Red", "Red", "Blue", "Yellow", "Red", "Red", "Green", "Yellow", "Red", "Yellow", "Red", "Green", "Yellow", "Red", "Green", "Yellow", "Blue", "Yellow", "Red", "Green", "Green", "Blue", "Yellow", "Green", "Green", "Green", "Blue"]), 83)
    assert.equal(colorPatternTimes(["Red", "Blue", "Red", "Blue", "Green", "Blue", "Yellow", "Blue", "Yellow", "Yellow", "Yellow", "Red"]), 33)
    assert.equal(colorPatternTimes(["Yellow", "Green", "Yellow", "Yellow"]), 10)
    assert.equal(colorPatternTimes(["Blue", "Blue", "Yellow", "Green", "Green", "Red", "Blue", "Yellow", "Red", "Yellow", "Green", "Red", "Yellow", "Green", "Yellow", "Blue", "Yellow", "Green", "Green", "Blue"]), 56)
    assert.equal(colorPatternTimes(["Red", "Blue", "Yellow", "Blue", "Green", "Yellow", "Yellow", "Yellow", "Yellow", "Red", "Red", "Yellow", "Yellow"]), 33)
    assert.equal(colorPatternTimes(["Blue", "Red", "Red"]), 7)
    assert.equal(colorPatternTimes(["Red", "Blue", "Yellow", "Green", "Blue", "Yellow", "Blue", "Yellow", "Red", "Green", "Green", "Blue", "Blue", "Green", "Green", "Red", "Green", "Red", "Green", "Red", "Red", "Green", "Red", "Red", "Green", "Red", "Blue", "Yellow", "Red", "Red"]), 83)
    assert.equal(colorPatternTimes(["Yellow", "Blue", "Yellow", "Yellow", "Yellow", "Blue", "Blue"]), 17)
    assert.equal(colorPatternTimes(["Yellow", "Red", "Green", "Green", "Yellow", "Green", "Green", "Yellow", "Yellow", "Red", "Green", "Green", "Blue", "Green", "Red", "Yellow"]), 43)
    assert.equal(colorPatternTimes(["Red", "Red", "Blue", "Yellow", "Red", "Red", "Red", "Yellow", "Blue", "Blue", "Yellow", "Yellow", "Red", "Yellow", "Red", "Blue", "Blue", "Yellow", "Yellow", "Blue", "Blue", "Yellow", "Red", "Blue", "Red", "Blue", "Red", "Yellow", "Blue"]), 78)
    assert.equal(colorPatternTimes(["Yellow", "Red", "Green"]), 8)
    assert.equal(colorPatternTimes(["Green", "Red", "Yellow", "Yellow", "Blue", "Red", "Blue", "Blue", "Yellow", "Red", "Yellow", "Green", "Green", "Red", "Green", "Blue", "Green", "Red", "Blue", "Yellow", "Red"]), 59)
    assert.equal(colorPatternTimes(["Yellow", "Red", "Blue", "Green", "Red", "Green", "Yellow", "Yellow", "Yellow", "Red", "Green", "Blue", "Blue"]), 35)
    assert.equal(colorPatternTimes(["Green", "Blue", "Blue", "Red", "Yellow", "Red", "Red", "Yellow", "Red", "Red", "Blue", "Red", "Red"]), 34)
    assert.equal(colorPatternTimes(["Yellow", "Yellow", "Red", "Blue"]), 10)
    assert.equal(colorPatternTimes(["Green", "Red", "Red", "Blue", "Yellow", "Blue", "Yellow", "Yellow", "Green", "Red", "Red", "Green", "Red", "Yellow", "Yellow", "Green", "Green", "Yellow", "Blue", "Blue", "Red", "Yellow", "Red", "Blue", "Red", "Blue", "Blue", "Yellow", "Blue", "Yellow"]), 82)
    assert.equal(colorPatternTimes(["Red", "Blue", "Green", "Yellow", "Yellow", "Yellow", "Yellow", "Blue"]), 20)
    assert.equal(colorPatternTimes(["Green", "Red", "Green", "Red", "Yellow", "Green", "Green", "Red", "Red", "Yellow", "Green", "Yellow", "Yellow", "Yellow"]), 37)
    assert.equal(colorPatternTimes(["Yellow", "Red", "Green", "Blue", "Blue", "Red", "Red", "Yellow", "Red", "Green", "Red"]), 30)
    assert.equal(colorPatternTimes(["Yellow", "Yellow", "Blue", "Yellow", "Green", "Yellow", "Green", "Green", "Red", "Yellow", "Blue", "Green", "Green", "Green"]), 37)
    assert.equal(colorPatternTimes(["Green", "Green", "Red", "Green", "Blue", "Blue", "Red", "Yellow", "Red", "Yellow", "Green"]), 30)
    assert.equal(colorPatternTimes(["Yellow", "Green", "Yellow", "Green", "Yellow", "Green", "Blue", "Green", "Blue", "Green", "Red", "Red", "Blue", "Yellow", "Green", "Blue"]), 46)
    assert.equal(colorPatternTimes(["Red", "Green", "Green", "Blue", "Red", "Green", "Green", "Red", "Yellow", "Blue", "Red", "Red", "Yellow", "Blue", "Blue"]), 40)
    assert.equal(colorPatternTimes(["Yellow", "Yellow", "Red", "Yellow", "Blue", "Blue", "Blue", "Red", "Blue", "Red", "Yellow", "Red", "Red", "Red", "Yellow", "Blue", "Green", "Blue", "Blue", "Yellow", "Green"]), 56)
    assert.equal(colorPatternTimes(["Green", "Green", "Red", "Green", "Blue"]), 13)
    assert.equal(colorPatternTimes(["Red", "Yellow", "Red", "Green", "Blue", "Red", "Red", "Red", "Green", "Blue"]), 27)
    assert.equal(colorPatternTimes(["Blue", "Blue", "Blue", "Blue", "Blue", "Green", "Yellow", "Red", "Yellow", "Red", "Red", "Green", "Blue", "Yellow", "Green", "Yellow", "Green"]), 45)
    assert.equal(colorPatternTimes(["Blue", "Blue", "Blue", "Blue", "Green", "Green", "Yellow", "Blue", "Blue", "Red", "Yellow", "Green", "Yellow", "Red", "Blue", "Red", "Yellow"]), 45)
    assert.equal(colorPatternTimes(["Blue", "Blue", "Blue", "Red", "Yellow", "Red", "Blue", "Blue", "Blue", "Yellow"]), 25)
    assert.equal(colorPatternTimes(["Green", "Red", "Green", "Blue", "Blue", "Blue"]), 15)
    assert.equal(colorPatternTimes(["Red", "Yellow", "Red", "Yellow", "Green", "Blue", "Yellow", "Yellow"]), 22)
    assert.equal(colorPatternTimes(["Blue", "Red", "Red", "Blue", "Yellow", "Red", "Yellow", "Yellow", "Blue", "Yellow", "Blue", "Red", "Blue", "Green", "Yellow", "Red", "Red", "Red", "Green", "Yellow", "Red", "Blue", "Green"]), 64)
    assert.equal(colorPatternTimes(["Blue", "Blue", "Blue", "Yellow"]), 9)
    assert.equal(colorPatternTimes(["Red", "Red", "Blue"]), 7)
    assert.equal(colorPatternTimes(["Green", "Blue", "Blue", "Blue", "Yellow", "Yellow", "Red", "Yellow", "Blue", "Red", "Yellow", "Blue"]), 32)
    assert.equal(colorPatternTimes(["Green", "Red", "Green", "Yellow", "Green", "Yellow", "Green"]), 20)
    assert.equal(colorPatternTimes(["Green", "Red", "Blue", "Green", "Green", "Yellow", "Red", "Green", "Blue", "Green", "Yellow", "Yellow", "Red", "Green", "Yellow", "Green", "Green", "Blue", "Yellow", "Green", "Green", "Blue", "Yellow", "Red", "Red", "Red", "Green", "Green"]), 76)
    assert.equal(colorPatternTimes(["Blue", "Blue", "Red", "Yellow", "Green", "Yellow", "Green", "Red", "Blue", "Blue", "Red", "Green", "Blue", "Yellow", "Yellow", "Green", "Blue", "Red", "Yellow", "Red", "Green", "Yellow", "Green", "Green", "Green", "Yellow", "Red"]), 75)
    assert.equal(colorPatternTimes(["Blue", "Red", "Red", "Yellow", "Red", "Yellow", "Yellow", "Yellow", "Yellow", "Red", "Yellow", "Red", "Blue", "Red", "Blue", "Red", "Red", "Yellow", "Green", "Red", "Red", "Blue", "Red", "Yellow", "Yellow", "Blue", "Green", "Green", "Yellow", "Red"]), 81)
    assert.equal(colorPatternTimes(["Yellow", "Yellow", "Yellow", "Red", "Green", "Red"]), 15)
    assert.equal(colorPatternTimes(["Blue", "Red", "Yellow"]), 8)
    assert.equal(colorPatternTimes(["Blue", "Red", "Red", "Green", "Red", "Yellow", "Red", "Red", "Green", "Yellow", "Blue", "Yellow", "Yellow", "Red", "Yellow", "Red", "Blue", "Yellow"]), 50)
    assert.equal(colorPatternTimes(["Yellow", "Green", "Red", "Green", "Green", "Blue", "Blue", "Blue", "Yellow", "Green", "Yellow", "Yellow", "Yellow", "Red", "Green", "Green", "Blue", "Green", "Yellow", "Red", "Green", "Blue", "Green", "Red", "Green", "Red"]), 71)
    assert.equal(colorPatternTimes(["Green", "Blue", "Yellow", "Yellow", "Red", "Red", "Red", "Red", "Red", "Green", "Blue", "Blue", "Red", "Yellow", "Red", "Red", "Red", "Red", "Blue", "Yellow", "Yellow"]), 52)
    assert.equal(colorPatternTimes(["Yellow", "Red", "Blue", "Red", "Green", "Yellow", "Red", "Blue", "Blue", "Green", "Green", "Blue", "Blue", "Green", "Blue", "Red", "Yellow"]), 47)
    assert.equal(colorPatternTimes(["Yellow", "Yellow", "Blue", "Yellow", "Green", "Green", "Yellow", "Green", "Green", "Green", "Green", "Yellow", "Blue", "Blue", "Blue", "Green", "Green", "Green", "Yellow", "Blue", "Red"]), 53)
    assert.equal(colorPatternTimes(["Green", "Yellow", "Yellow"]), 7)
    assert.equal(colorPatternTimes(["Blue", "Yellow", "Yellow", "Green", "Blue", "Yellow", "Green", "Green", "Green", "Yellow", "Red", "Yellow", "Green", "Red", "Red", "Blue", "Yellow", "Blue", "Blue", "Red"]), 54)
    assert.equal(colorPatternTimes(["Green"]), 2)
    assert.equal(colorPatternTimes(["Green", "Blue"]), 5)
    assert.equal(colorPatternTimes(["Green", "Blue", "Red", "Blue", "Yellow", "Yellow", "Green", "Green", "Yellow", "Blue", "Green", "Red", "Green", "Yellow", "Green", "Blue", "Red", "Red", "Red", "Red", "Red"]), 56)
    assert.equal(colorPatternTimes(["Blue", "Yellow", "Blue", "Red", "Green", "Blue", "Yellow", "Red", "Blue", "Red", "Yellow", "Green", "Green", "Yellow", "Green", "Red", "Blue", "Red", "Red", "Blue", "Red", "Blue", "Yellow", "Blue", "Red", "Green", "Blue", "Yellow", "Yellow"]), 83)
    assert.equal(colorPatternTimes(["Yellow", "Yellow", "Green", "Yellow", "Green", "Blue", "Yellow", "Red", "Red", "Yellow", "Blue", "Blue", "Blue", "Blue", "Green", "Red", "Red", "Yellow", "Green", "Red", "Red", "Yellow"]), 58)
    assert.equal(colorPatternTimes(["Blue", "Red"]), 5)
    assert.equal(colorPatternTimes(["Blue", "Red", "Red", "Blue", "Red", "Green", "Green"]), 18)
    assert.equal(colorPatternTimes(["Red", "Green", "Green", "Yellow", "Yellow", "Yellow", "Red", "Green", "Yellow", "Yellow", "Green", "Blue", "Blue", "Blue", "Blue", "Yellow", "Blue", "Blue", "Blue", "Red", "Red", "Yellow", "Blue", "Red", "Blue", "Green", "Red", "Red"]), 72)
    assert.equal(colorPatternTimes(["Yellow", "Green", "Green", "Green", "Yellow", "Yellow", "Yellow", "Green", "Yellow", "Yellow", "Blue", "Green", "Yellow", "Blue", "Red", "Red", "Green", "Yellow", "Blue", "Red", "Blue", "Yellow"]), 59)
    assert.equal(colorPatternTimes(["Blue", "Green", "Blue", "Green", "Green", "Blue", "Red", "Green", "Red"]), 25)
    assert.equal(colorPatternTimes(["Yellow"]), 2)
    assert.equal(colorPatternTimes(["Green", "Yellow", "Red", "Green", "Yellow", "Blue", "Yellow", "Red", "Green", "Green", "Red", "Red", "Blue", "Red"]), 39)
    assert.equal(colorPatternTimes(["Blue", "Blue", "Blue"]), 6)
    assert.equal(colorPatternTimes(["Green", "Blue", "Blue", "Green", "Blue", "Green", "Blue", "Green", "Red", "Red", "Yellow", "Blue", "Blue", "Blue", "Blue", "Green", "Blue", "Green", "Blue", "Green", "Green", "Blue"]), 59)
    assert.equal(colorPatternTimes(["Blue", "Blue", "Blue", "Blue"]), 8)
    assert.equal(colorPatternTimes(["Red", "Blue", "Red", "Red", "Yellow", "Blue", "Yellow", "Blue", "Red", "Blue", "Green", "Yellow", "Green", "Yellow", "Red", "Red", "Red", "Green", "Red", "Yellow", "Blue", "Yellow", "Green", "Yellow", "Blue", "Green", "Blue", "Red", "Yellow", "Yellow"]), 85)
  })
})